{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xfc963994ed8b4c11a1a1de53be94569286165e1c1525dc1f993f0b3e51afc8ef",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "904312",
    "logsBloom": "0x
    "blockHash": "0x27878137d3e3219774f7c82f17dfd33aa9554e5ad917665e6200c6e89d063162",
    "transactionHash": "0xfc963994ed8b4c11a1a1de53be94569286165e1c1525dc1f993f0b3e51afc8ef",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "904312",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "3094421baeb8b71d4004666eabd8048a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//Get funds from users\\n//Withdraw funds\\n//Set a minimun funding value in USD\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    uint256 public constant minimumUSD = 50 * 1e18;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    address public immutable owner;\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= minimumUSD,\\n            \\\"Didn't send enough!\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        require(msg.sender == owner, \\\"Not the owner!\\\");\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        //Resetting an array\\n        funders = new address[](0);\\n\\n        //Actually withdrawing the funds\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed!\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Not the owner!\\\");\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xd62301e417e1304cb2494dfa7c708c0478088c50f4cc3c109c82d866440070d3\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n        //3000.00000000\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xff90b77caeadcf2b3298da9c186cef4b3350e74394b05d31717ede086273904f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516200106c3803806200106c833981810160405281019061003491906100c6565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610141565b6000815190506100c08161012a565b92915050565b6000602082840312156100dc576100db610125565b5b60006100ea848285016100b1565b91505092915050565b60006100fe82610105565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610133816100f3565b811461013e57600080fd5b50565b60805160601c610efe6200016e600039600081816102df0152818161036d01526105f30152610efe6000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633430a88c1461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d0565b6040516100af9190610a79565b60405180910390f35b3480156100c457600080fd5b506100cd6102dd565b005b3480156100db57600080fd5b506100f660048036038101906100f19190610840565b6105b5565b6040516101039190610a79565b60405180910390f35b34801561011857600080fd5b506101216105cd565b60405161012e91906109fe565b60405180910390f35b34801561014357600080fd5b5061014c6105f1565b60405161015991906109e3565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e919061086d565b610615565b6040516101a091906109e3565b60405180910390f35b6802b5e3af16b18800006101e660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461065490919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610a39565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036290610a19565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f090610a19565b60405180910390fd5b60005b6001805490508110156104a55760006001828154811061041f5761041e610d8b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049d90610ce4565b9150506103fc565b50600067ffffffffffffffff8111156104c1576104c0610dba565b5b6040519080825280602002602001820160405280156104ef5781602001602082028036833780820191505090505b5060019080519060200190610505929190610730565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052c906109ce565b60006040518083038185875af1925050503d8060008114610569576040519150601f19603f3d011682016040523d82523d6000602084013e61056e565b606091505b50509050806105b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a990610a59565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061062557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061066083610690565b90506000670de0b6b3a764000085836106799190610bf8565b6106839190610ab0565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106d957600080fd5b505afa1580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610711919061089a565b5050509150506402540be400816107289190610ae1565b915050919050565b8280548282559060005260206000209081019282156107a9579160200282015b828111156107a85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610750565b5b5090506107b691906107ba565b5090565b5b808211156107d35760008160009055506001016107bb565b5090565b6000813590506107e681610e6c565b92915050565b6000815190506107fb81610e83565b92915050565b60008135905061081081610e9a565b92915050565b60008151905061082581610e9a565b92915050565b60008151905061083a81610eb1565b92915050565b60006020828403121561085657610855610de9565b5b6000610864848285016107d7565b91505092915050565b60006020828403121561088357610882610de9565b5b600061089184828501610801565b91505092915050565b600080600080600060a086880312156108b6576108b5610de9565b5b60006108c48882890161082b565b95505060206108d5888289016107ec565b94505060406108e688828901610816565b93505060606108f788828901610816565b92505060806109088882890161082b565b9150509295509295909350565b61091e81610c52565b82525050565b61092d81610cae565b82525050565b6000610940600083610a94565b915061094b82610dee565b600082019050919050565b6000610963600e83610a9f565b915061096e82610df1565b602082019050919050565b6000610986601383610a9f565b915061099182610e1a565b602082019050919050565b60006109a9600c83610a9f565b91506109b482610e43565b602082019050919050565b6109c881610c8e565b82525050565b60006109d982610933565b9150819050919050565b60006020820190506109f86000830184610915565b92915050565b6000602082019050610a136000830184610924565b92915050565b60006020820190508181036000830152610a3281610956565b9050919050565b60006020820190508181036000830152610a5281610979565b9050919050565b60006020820190508181036000830152610a728161099c565b9050919050565b6000602082019050610a8e60008301846109bf565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610abb82610c8e565b9150610ac683610c8e565b925082610ad657610ad5610d5c565b5b828204905092915050565b6000610aec82610c64565b9150610af783610c64565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b3657610b35610d2d565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b7357610b72610d2d565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610bb057610baf610d2d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610bed57610bec610d2d565b5b828202905092915050565b6000610c0382610c8e565b9150610c0e83610c8e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c4757610c46610d2d565b5b828202905092915050565b6000610c5d82610c6e565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610cb982610cc0565b9050919050565b6000610ccb82610cd2565b9050919050565b6000610cdd82610c6e565b9050919050565b6000610cef82610c8e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d2257610d21610d2d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b50565b7f4e6f7420746865206f776e657221000000000000000000000000000000000000600082015250565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b7f43616c6c204661696c6564210000000000000000000000000000000000000000600082015250565b610e7581610c52565b8114610e8057600080fd5b50565b610e8c81610c64565b8114610e9757600080fd5b50565b610ea381610c8e565b8114610eae57600080fd5b50565b610eba81610c98565b8114610ec557600080fd5b5056fea2646970667358221220129c0fc44496d00e4cd615fccbaa8f54ae3fa430cac71961b4abbe167f475c9a64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633430a88c1461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d0565b6040516100af9190610a79565b60405180910390f35b3480156100c457600080fd5b506100cd6102dd565b005b3480156100db57600080fd5b506100f660048036038101906100f19190610840565b6105b5565b6040516101039190610a79565b60405180910390f35b34801561011857600080fd5b506101216105cd565b60405161012e91906109fe565b60405180910390f35b34801561014357600080fd5b5061014c6105f1565b60405161015991906109e3565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e919061086d565b610615565b6040516101a091906109e3565b60405180910390f35b6802b5e3af16b18800006101e660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461065490919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610a39565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036290610a19565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f090610a19565b60405180910390fd5b60005b6001805490508110156104a55760006001828154811061041f5761041e610d8b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049d90610ce4565b9150506103fc565b50600067ffffffffffffffff8111156104c1576104c0610dba565b5b6040519080825280602002602001820160405280156104ef5781602001602082028036833780820191505090505b5060019080519060200190610505929190610730565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052c906109ce565b60006040518083038185875af1925050503d8060008114610569576040519150601f19603f3d011682016040523d82523d6000602084013e61056e565b606091505b50509050806105b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a990610a59565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061062557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061066083610690565b90506000670de0b6b3a764000085836106799190610bf8565b6106839190610ab0565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106d957600080fd5b505afa1580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610711919061089a565b5050509150506402540be400816107289190610ae1565b915050919050565b8280548282559060005260206000209081019282156107a9579160200282015b828111156107a85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610750565b5b5090506107b691906107ba565b5090565b5b808211156107d35760008160009055506001016107bb565b5090565b6000813590506107e681610e6c565b92915050565b6000815190506107fb81610e83565b92915050565b60008135905061081081610e9a565b92915050565b60008151905061082581610e9a565b92915050565b60008151905061083a81610eb1565b92915050565b60006020828403121561085657610855610de9565b5b6000610864848285016107d7565b91505092915050565b60006020828403121561088357610882610de9565b5b600061089184828501610801565b91505092915050565b600080600080600060a086880312156108b6576108b5610de9565b5b60006108c48882890161082b565b95505060206108d5888289016107ec565b94505060406108e688828901610816565b93505060606108f788828901610816565b92505060806109088882890161082b565b9150509295509295909350565b61091e81610c52565b82525050565b61092d81610cae565b82525050565b6000610940600083610a94565b915061094b82610dee565b600082019050919050565b6000610963600e83610a9f565b915061096e82610df1565b602082019050919050565b6000610986601383610a9f565b915061099182610e1a565b602082019050919050565b60006109a9600c83610a9f565b91506109b482610e43565b602082019050919050565b6109c881610c8e565b82525050565b60006109d982610933565b9150819050919050565b60006020820190506109f86000830184610915565b92915050565b6000602082019050610a136000830184610924565b92915050565b60006020820190508181036000830152610a3281610956565b9050919050565b60006020820190508181036000830152610a5281610979565b9050919050565b60006020820190508181036000830152610a728161099c565b9050919050565b6000602082019050610a8e60008301846109bf565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610abb82610c8e565b9150610ac683610c8e565b925082610ad657610ad5610d5c565b5b828204905092915050565b6000610aec82610c64565b9150610af783610c64565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b3657610b35610d2d565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b7357610b72610d2d565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610bb057610baf610d2d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610bed57610bec610d2d565b5b828202905092915050565b6000610c0382610c8e565b9150610c0e83610c8e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c4757610c46610d2d565b5b828202905092915050565b6000610c5d82610c6e565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610cb982610cc0565b9050919050565b6000610ccb82610cd2565b9050919050565b6000610cdd82610c6e565b9050919050565b6000610cef82610c8e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d2257610d21610d2d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b50565b7f4e6f7420746865206f776e657221000000000000000000000000000000000000600082015250565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b7f43616c6c204661696c6564210000000000000000000000000000000000000000600082015250565b610e7581610c52565b8114610e8057600080fd5b50565b610e8c81610c64565b8114610e9757600080fd5b50565b610ea381610c8e565b8114610eae57600080fd5b50565b610eba81610c98565b8114610ec557600080fd5b5056fea2646970667358221220129c0fc44496d00e4cd615fccbaa8f54ae3fa430cac71961b4abbe167f475c9a64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 81,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 85,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}